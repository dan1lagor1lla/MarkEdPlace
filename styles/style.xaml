<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style
        TargetType="Window">
        <Setter
            Property="FontFamily"
            Value="../resources/#Noah"/>
        <Setter
            Property="Background"
            Value="{StaticResource SecondColor}"/>
    </Style>
    <Style
        TargetType="Button"
        x:Key="BaseButton">
        <Setter
            Property="Template"
            Value="{StaticResource BaseButtonTemplate}"/>
        <Setter
            Property="BorderThickness"
            Value="0"/>
        <Setter
            Property="Cursor"
            Value="Hand"/>
    </Style>
    <Style
        TargetType="Button"
        BasedOn="{StaticResource BaseButton}">
        <Setter
            Property="Template"
            Value="{StaticResource RoundedButton}"/>
        <Setter
            Property="Background"
            Value="{StaticResource MainColor}"/>
        <Setter
            Property="Foreground"
            Value="{StaticResource SecondColor}"/>
    </Style>
    <Style
        TargetType="TextBlock">
        <Setter
            Property="TextAlignment"
            Value="Center"/>
        <Setter
            Property="TextWrapping"
            Value="Wrap"/>
    </Style>
    <Style
        TargetType="TextBlock"
        BasedOn="{StaticResource {x:Type TextBlock}}"
        x:Key="HighlightOnHoverTextBlock">
        <Setter
            Property="Cursor"
            Value="Hand"/>
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Opacity"
                    Value="0.6"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style
        TargetType="TextBox">
        <Setter
            Property="Template"
            Value="{StaticResource TextBoxTemplate}"/>
        <Setter
            Property="Background"
            Value="#eeeff1"/>
        <Setter
            Property="BorderBrush"
            Value="#CCCCCC"/>
        <Setter
            Property="BorderThickness"
            Value="0"/>
        <Setter
            Property="VerticalContentAlignment"
            Value="Center"/>
    </Style>

    <Style
        TargetType="ListBoxItem">
        <Setter
            Property="HorizontalContentAlignment"
            Value="Stretch"/>
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="ListBoxItem">
                    <Border
                        x:Name="Bd"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Padding="{TemplateBinding Padding}"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <!--<ControlTemplate.Triggers>
            <Trigger
                Property="IsSelected"
                Value="true">
                <Setter
                    Property="Background" 
                    TargetName="Bd" 
                    Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter
                    Property="Foreground" 
                    Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition
                        Property="IsSelected" 
                        Value="true"/>
                    <Condition
                        Property="Selector.IsSelectionActive"
                        Value="false"/>
                </MultiTrigger.Conditions>
                <Setter
                    Property="Background"
                    TargetName="Bd"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
            </MultiTrigger>
            <Trigger
                Property="IsEnabled"
                Value="false">
                <Setter
                    Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>-->
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>